/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterfaces;

import List.CourAndSubjList;
import Modelos.CourseM;
import Modelos.StudentM;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import schoolsystem.users.Student;
import schoolsystem.users.Teacher;
import schoolsystem.users.UserList;

/**
 *
 * @author gustavocamargo
 */
public class syncStudent extends javax.swing.JPanel {
    
    DefaultComboBoxModel modelC = new DefaultComboBoxModel();
    DefaultComboBoxModel modelSt = new DefaultComboBoxModel();
    
    public Vector listaC = CourAndSubjList.getCourseList();
    public Course course;
    
    public Vector listaS = UserList.getStudentList();
    public Student student;

    /**
     * Creates new form syncStudent
     */
    public syncStudent() {
        initComponents();
        loadCourse(coursesComboBox);
        loadStudents(studentsComboBox);
    }
    
    private void loadCourse(JComboBox courses) {
        try {
            for (int i = 0; i < listaC.size(); i++) {
                course = (Course) listaC.elementAt(i);
                if (course.getCourseName()!= null) {
                    modelC.addElement(new CourseM(course.getCourseName()));
                } else {
                    modelC.addElement(i);
                }
            }
            
        } catch (NullPointerException n) {
            JOptionPane.showMessageDialog(null, "ERROR", "", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadStudents(JComboBox studentsComboBox) {
        try {
            for (int i = 0; i < listaS.size(); i++) {
                Student student = (Student) listaS.elementAt(i);
                if (student != null) {
                    modelSt.addElement(new StudentM(student.getName(), student.getUser()));
                } else {
                    modelSt.addElement(i);
                }
            }
            
        } catch (NullPointerException n) {
            JOptionPane.showMessageDialog(null, "ERROR", "", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        coursesComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        studentsComboBox = new javax.swing.JComboBox<>();
        btnCrear = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Course");

        coursesComboBox.setModel(modelC);
        coursesComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                coursesComboBoxItemStateChanged(evt);
            }
        });
        coursesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Student");

        studentsComboBox.setModel(modelSt);
        studentsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentsComboBoxActionPerformed(evt);
            }
        });

        btnCrear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCrear.setText("Create");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(btnCrear)
                .addContainerGap(299, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(171, 171, 171)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(245, 245, 245))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(59, 59, 59)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(coursesComboBox, 0, 186, Short.MAX_VALUE)
                                .addComponent(studentsComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap(171, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(340, Short.MAX_VALUE)
                .addComponent(btnCrear)
                .addGap(70, 70, 70))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(coursesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(58, 58, 58)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addContainerGap(157, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void coursesComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_coursesComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_coursesComboBoxItemStateChanged

    private void coursesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursesComboBoxActionPerformed

    private void studentsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentsComboBoxActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        CourseM selectedCourse = (CourseM) coursesComboBox.getSelectedItem();
        StudentM selectedStudent = (StudentM) studentsComboBox.getSelectedItem();

        for (int i = 0; i < listaC.size(); i++) {
            Course listCourse =  (Course) listaC.elementAt(i);
            if(selectedCourse.getName().equals(listCourse.getCourseName())) {
                for (int j = 0; j < listaS.size(); j++) {
                    Student listStudent = (Student) listaS.elementAt(j);
                    if(selectedStudent.getId().equals(listStudent.getUser())) {
                        listCourse.setStudent(listStudent);
                        break;
                    }
                }
                break;
            }
        }
        JOptionPane.showMessageDialog(null, "The student has been synced successfully");
    }//GEN-LAST:event_btnCrearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JComboBox<String> coursesComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> studentsComboBox;
    // End of variables declaration//GEN-END:variables
}
